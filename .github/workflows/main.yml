name: Main Taski Workflow

on:
  push:
    branches:
      - main

jobs:
  send_message_to_telegram_about_starting_tests_and_deploying:
    runs-on: ubuntu-latest
    steps:
    - name: Send Message to Telegram about Starting Tests and Deploying
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Начался процесс тестов и деплоя.**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  backend_tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Check Out Backend Code
      uses: actions/checkout@v3

    - name: Set Up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.9

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8==6.0.0 flake8-isort==6.0.0
        pip install -r ./backend/requirements.txt

    - name: Test Backend With flake8 and Django Tests
      env:
        POSTGRES_USER: django_user
        POSTGRES_PASSWORD: django_password
        POSTGRES_DB: django_db
        DB_HOST: 127.0.0.1
        DB_PORT: 5432
      run: |
        python -m flake8 backend/
        cd backend/
        python manage.py test

  send_message_to_telegram_about_failed_backend_tests:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Backend Tests
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Backend не прошел тесты!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_passing_backend_tests:
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
    - name: Send Message to Telegram about Passing Backend Tests
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Backend успешно прошел тесты!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}
  
  build_and_push_backend_to_docker_hub:
    name: Push Backend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/buil-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest

  send_message_to_telegram_about_failed_backend_pushing_to_docker_hub:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Backend Pushing to DockerHub
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Backend не был запушен на DockerHub!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_pushing_backend_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_docker_hub
    steps:
    - name: Send Message to Telegram about Pushing Backend to DockerHub
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Backend был успешно запушен на DockerHub!**
          Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERBANE }}/taski_backend

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  frontend_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Frontend Code
      uses: actions/checkout@v3

    - name: Set Up NodeJS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install Dependencies
      run: |
        cd frontend/
        npi ci

    - name: Test Frontend
      run: |
        cd frontend/
        npm run test

  send_message_to_telegram_about_failed_frontend_tests:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Frontend Tests
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Frontend не прошел тесты!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_passing_frontend_tests:
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
    - name: Send Message to Telegram about Passing Frontend Tests
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Frontend успешно прошел тесты!**
          
          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  build_frontend_and_push_to_docker_hub:
    name: Push Frontend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_frontend:latest

  send_message_to_telegram_about_failed_frontend_pushing_to_docker_hub:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Frontend Pushing to DockerHub
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Frontend не был запушен на DockerHub!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_pushing_frontend_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_frontend_and_push_to_docker_hub
    steps:
    - name: Send Message to Telegram about Pushing Frontend to DockerHub
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Frontend был успешно запушен на DockerHub!**
          Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERBANE }}/taski_frontend

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}
        
  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./gateway/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_gateway:latest

  send_message_to_telegram_about_failed_gateway_pushing_to_docker_hub:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Gateway Pushing to DockerHub
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Gateway не был запушен на DockerHub!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_pushing_gateway_to_docker_hub:
    runs-on: ubuntu-latest
    needs: build_gateway_and_push_to_docker_hub
    steps:
    - name: Send Message to Telegram about Pushing Gateway to DockerHub
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **⏳ Проект ${{ github.repository }}. Gateway был успешно запушен на DockerHub!**
          Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERBANE }}/taski_gateway

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.production.yml via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd taski
            echo ${{ secrets.ENV_FILE }} > .env
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/

  send_message_to_telegram_about_failed_deploy:
    runs-on: ubuntu-latest
    #needs: backend_tests
    steps:
    - name: Send Message to Telegram about Failed Deploy
      if: ${{ failure() }}
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **❌ Проект ${{ github.repository }}. Деплой не был выполнен!**

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  send_message_to_telegram_about_deploy:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send Message to Telegram
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: |
          **✅ Проект ${{ github.repository }} был успешно задеплоен на сервер!**
          Ссылка на сайт: ${{ secrets.LINK }}

          Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}