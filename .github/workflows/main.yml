name: Main Taski Workflow

on:
  push:
    branches:
      - main

jobs:
  send_message_to_telegram_about_starting_tests_and_deploying:
    name: Send Message to Telegram about Starting Tests and Deploying
    runs-on: ubuntu-latest
    steps:
      - uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Начался процесс тестов и деплоя.

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  backend_tests:
    name: Backend Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13.10
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Check Out Backend Code
        uses: actions/checkout@v3

      - name: Set Up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8==6.0.0 flake8-isort==6.0.0
          pip install -r ./backend/requirements.txt

      - name: Test Backend With flake8 and Django Tests
        env:
          POSTGRES_USER: django_user
          POSTGRES_PASSWORD: django_password
          POSTGRES_DB: django_db
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
        run: |
          python -m flake8 backend/
          cd backend/
          python manage.py test

      - name: Send a Message to Telegram About Successful Backend Tests
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Backend прошел тесты!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram about Failed Backend Tests
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Backend не прошел тесты!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}
  
  build_and_push_backend_to_docker_hub:
    name: Push Backend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: backend_tests
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_backend:latest

      - name: Send a Message to Telegram About Successful Backend Pushing to DockerHub
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Backend был успешно запушен на DockerHub!
  
            Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/taski_backend
            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram About Failed Backend Pushing to DockerHub
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Не удалось запушить Backend на DockerHub!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  frontend_tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Frontend Code
        uses: actions/checkout@v3

      - name: Set Up NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: |
          cd frontend/
          npm ci

      - name: Test Frontend
        run: |
          cd frontend/
          npm run test

      - name: Send a Message to Telegram About Successful Frontend Tests
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Frontend прошел тесты!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram about Failed Frontend Tests
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Frontend не прошел тесты!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  build_frontend_and_push_to_docker_hub:
    name: Push Frontend Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: frontend_tests
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_frontend:latest

      - name: Send a Message to Telegram About Successful Frontend Pushing to DockerHub
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Frontend был успешно запушен на DockerHub!

            Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/taski_frontend
            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram About Failed Frontend Pushing to DockerHub
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Не удалось запушить Frontend на DockerHub!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  build_gateway_and_push_to_docker_hub:
    name: Push gateway Docker Image to DockerHub
    runs-on: ubuntu-latest
    steps:
      - name: Check Out the Repo
        uses: actions/checkout@v3

      - name: Set Up Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./gateway/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/taski_gateway:latest

      - name: Send a Message to Telegram About Successful Gateway Pushing to DockerHub
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ⏳ Проект ${{ github.repository }}. Gateway был успешно запушен на DockerHub!
  
            Репозиторий  DockerHub: hub.docker.com/repository/docker/${{ secrets.DOCKER_USERNAME }}/taski_gateway
            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram About Failed Gateway Pushing to DockerHub
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Не удалось запушить Gateway на DockerHub!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

  deploy:
    name: Deploying
    runs-on: ubuntu-latest
    needs:
      - build_and_push_backend_to_docker_hub
      - build_frontend_and_push_to_docker_hub
      - build_gateway_and_push_to_docker_hub
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Copy docker-compose.production.yml via SSH
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "docker-compose.production.yml"
          target: "taski"

      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            cd taski
            echo ${{ secrets.ENV_FILE }} > .env
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py migrate
            sudo docker compose -f docker-compose.production.yml exec backend python manage.py collectstatic
            sudo docker compose -f docker-compose.production.yml exec backend cp -r /app/collected_static/. /backend_static/static/
  
      - name: Send Message to Telegram about Successful Deploy
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ✅ Проект ${{ github.repository }} был успешно задеплоен на сервер!
            Ссылка на сайт: ${{ secrets.LINK }}

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}

      - name: Send a Message to Telegram About Failed Deploy
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            ❌ Проект ${{ github.repository }}. Не удалось выполнить деплой!!

            Репозиторий GitHub: ${{ github.server_url }}/${{ github.repository }}